import './ResultPage.css'; 
import Button from './components/Button/Button';
import { useRef } from 'react';
import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';

function ResultPage({ childInfo, parentInfo, testResult }) {
  const { age, comment, lstScores } = testResult;
  const resultRef = useRef();

  const formatDate = (dateStr) => {
    if (!dateStr) return '';
    const [year, month, day] = dateStr.split('-');
    return `${day}/${month}/${year}`;
  };

  const handleDownloadPDF = async () => {
    const element = resultRef.current;
    const pdfHeader = element.querySelector('.pdf-only-header');
  
    // üëâ T·∫°m th·ªùi hi·ªÉn th·ªã ti√™u ƒë·ªÅ
    pdfHeader.style.display = 'block';
  
    // üëâ ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ DOM c·∫≠p nh·∫≠t (html2canvas c·∫ßn render ƒë√∫ng)
    await new Promise(resolve => setTimeout(resolve, 200));
  
    // üëâ T·∫°o canvas t·ª´ DOM ƒë√£ hi·ªÉn th·ªã
    const canvas = await html2canvas(element, { scale: 2 });
    const imgData = canvas.toDataURL('image/png');
  
    const pdf = new jsPDF('p', 'mm', 'a4');
    const imgProps = pdf.getImageProperties(imgData);
    const pdfWidth = pdf.internal.pageSize.getWidth();
    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
  
    pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);
    pdf.save('ASQ3_KetQua.pdf');
  
    // üëâ ·∫®n l·∫°i ti√™u ƒë·ªÅ
    pdfHeader.style.display = 'none';
  };
  
  

  return (
    <div className="result-page">
        <div className="print-pdf" ref={resultRef}>
    <div className="pdf-only-header">
    <h2 className="pdf-title">K·∫øt qu·∫£ b√†i s√†ng l·ªçc ƒë√°nh gi√° ph√°t tri·ªÉn theo ƒë·ªô tu·ªïi ASQ-3</h2>
    <p className="pdf-time">Th·ªùi gian: {new Date().toLocaleString()}</p>
  </div>
      {/* 1. TH√îNG TIN TR·∫∫ */}
      <section className="section">
        <h3 className="chapter">1. TH√îNG TIN CHUNG</h3>
        <div className="info-grid">
          <div><strong>H·ªç v√† t√™n tr·∫ª:</strong> {childInfo.fullName}</div>
          <div><strong>Ng√†y sinh:</strong> {formatDate(childInfo.birthDate)}</div>
          <div><strong>SƒêT li√™n h·ªá:</strong> {parentInfo.phone}</div>
          <div><strong>N∆°i s√†ng l·ªçc:</strong> {parentInfo.place}</div>
          <div><strong>Ng√†y th·ª±c hi·ªán:</strong> {new Date().toLocaleDateString()}</div>
        </div>
      </section>

      {/* 2. GI·∫¢I TH√çCH */}
      <section className="section">
        <h3 className="chapter">2. GI·∫¢I TH√çCH V·ªÄ S√ÄNG L·ªåC ASQ-3</h3>
        <p>ASQ-3 l√† b·ªô s√†ng l·ªçc chu·∫©n d√†nh cho cha m·∫π/ ng∆∞·ªùi chƒÉm s√≥c ƒë·ªÉ t·ª± ƒëi·ªÅn nh·∫±m s√†ng l·ªçc s·ª± ph√°t tri·ªÉn c·ªßa tr·∫ª nh·ªè...</p>
        <div className="legend">
          <p className="lv1">- V√πng ƒëi·ªÉm th·ªÉ hi·ªán tr·∫ª ƒëang g·∫∑p kh√≥ khƒÉn - CH·∫¨M PH√ÅT TRI·ªÇN</p>
          <p className="lv2">- V√πng ƒëi·ªÉm th·ªÉ hi·ªán tr·∫ª c·∫ßn ƒë∆∞·ª£c theo d√µi th√™m v√† l√†m s√†ng l·ªçc l·∫°i do m·ªôt s·ªë k·ªπ nƒÉng ch∆∞a th√†nh th·ª•c - C·∫¶N THEO D√ïI </p>
          <p className="lv3">- V√πng ƒëi·ªÉm th·ªÉ hi·ªán tr·∫ª c√≥ s·ª± ph√°t tri·ªÉn b√¨nh th∆∞·ªùng - B√åNH TH∆Ø·ªúNG</p>
        </div>
      </section>

      {/* 3. ƒêI·ªÇM */}
      <section className="section">
        <h3 className="chapter">3. ƒêI·ªÇM C·ª¶A TR·∫∫ SAU KHI S√ÄNG L·ªåC</h3>
        <table className="score-table">
          <thead>
            <tr>
              <th>Lƒ©nh v·ª±c</th>
              <th>Ng∆∞·ª°ng ƒëi·ªÉm</th>
              <th>ƒêi·ªÉm c·ªßa tr·∫ª</th>
              <th>Thang chu·∫©n 0 - 60 </th>
            </tr>
          </thead>
          <tbody>
            {Array.isArray(lstScores) ? (
              lstScores.map(({ field, score }, idx) => {
                const leftPercent = Math.min(Math.max((score / 60) * 100, 0), 100);
                return (
                  <tr key={idx}>
                    <td>{field}</td>
                    <td> </td>
                    <td>{`${score}`}</td>
                    <td>
                      <div className="slider-container">
                        <div className="slider-track"></div>
                        <div
                          className="slider-dot"
                          style={{ left: `${leftPercent}%` }}
                          title={`ƒêi·ªÉm: ${score}`}
                        />
                      </div>
                      <div style={{ marginTop: 4, textAlign: 'center' }}>{score}</div>
                    </td>
                  </tr>
                );
              })
            ) : (
              <tr>
                <td colSpan="4">Kh√¥ng c√≥ d·ªØ li·ªáu ƒëi·ªÉm s√†ng l·ªçc</td>
              </tr>
            )}
          </tbody>
        </table>
      </section>

      {/* 4 + 5 */}
      <section className="section">
        <h3 className="chapter">4. K·∫æT QU·∫¢ D·ª∞ ƒêO√ÅN M·ª®C ƒê·ªò PH√ÅT TRI·ªÇN C·ª¶A TR·∫∫</h3>
        <p>..............</p>
        <h3 className="chapter">5. ƒê·ªÄ XU·∫§T GI·∫¢I PH√ÅP</h3>
        <p>..............</p>
      </section>

      </div>

      <div className="result-buttons">
        <Button onClick={handleDownloadPDF}>T·∫£i k·∫øt qu·∫£</Button>
        <Button>Xem k·∫øt qu·∫£ qua email</Button>
      </div>
    </div>
  );
}

export default ResultPage;
